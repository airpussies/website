{"version":3,"sources":["webpack:///./src/lib/util.js","webpack:///./src/components/reports/EntriesByYear.js","webpack:///./src/pages/news/index.js","webpack:///./src/components/reports/news.js","webpack:///./src/components/reports/division.js","webpack:///./src/components/reports/reportTags.js","webpack:///./src/components/reports/report.js"],"names":["group_by","key","data","reduce","acc","item","group_by_value","groups","includes","push","entries","EntriesByYear","render","content","year","this","props","items","type","map","i","report","news","className","React","Component","NewsByYears","nodes","allContentfulNews","edges","edge","node","Date","sort","a","b","console","log","window","reverse","pageQuery","News","headline","slug","publicationDate","author","formattedDate","Intl","DateTimeFormat","month","day","format","to","Division","foo","split","division","ReportTags","date","location","fieldType","Report","title"],"mappings":"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","file":"component---src-pages-news-index-js-b0b6984cb2c7b560ab52.js","sourcesContent":["export const group_by = function (key, data) {\n\n  return data.reduce(function (acc, item) {\n    let group_by_value = item[key];\n    acc.groups = acc.groups || [];\n    if (!acc.groups.includes(group_by_value)) {\n      acc.groups.push(group_by_value);\n    }\n    acc.entries = acc.entries || {};\n    acc.entries[group_by_value] = (acc.entries[group_by_value] || []);\n    acc.entries[group_by_value].push(item);\n    return acc;\n  }, {})\n\n}","import React from \"react\";\nimport Report from \"./report\";\nimport News from \"./news\";\n\nexport default class EntriesByYear extends React.Component {\n  render() {\n    const year = this.props.year;\n    const items = this.props.items;\n    let content;\n    if (this.props.type === \"report\") {\n      content = items.map((item, i) => (\n          <Report report={item} key={i}/>\n        ))\n    } else if (this.props.type === \"news\") {\n      content = items.map((item, i) => (\n        <News news={item} key={i}/>\n      ))\n    } else {\n      content = <div>unknown entry type {this.props.type}</div>\n    }\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <h2 className={\"subtitle\"}>{year}</h2>\n          <dl>\n            {content}\n          </dl>\n        </div>\n      </section>\n    );\n  }\n}","import {graphql} from \"gatsby\"\nimport React from \"react\"\nimport Layout from \"../../components/layout\";\nimport EntriesByYear from \"../../components/reports/EntriesByYear\";\nimport {group_by} from \"../../lib/util\"\n\nexport default function NewsByYears({data}) {\n  const nodes = group_by('year', data.allContentfulNews.edges\n    .map(edge => edge['node'])\n    .map(node => {\n      // parse date: str -> date\n      node['publicationDate'] = new Date(node['publicationDate']);\n      return node;\n    })\n    .sort((a, b) => a['publicationDate'] < b['publicationDate'] ? 1 : -1)\n  );\n  console.log(nodes)\n  window.nodes = nodes\n  return (\n    <Layout>\n      <h1 className=\"is-1 title\">Turnierhistorie</h1>\n      {nodes.groups.sort().reverse().map((year, i) =>\n        <EntriesByYear type={\"news\"} year={year} items={nodes.entries[year]} key={i}/>\n      )}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`query {\n  allContentfulNews(limit: 500) {\n    edges {\n      node {\n        year: publicationDate(formatString: \"YYYY\")\n        publicationDate\n        slug\n        id\n        headline\n        slug\n        author\n      }\n    }\n  }\n}\n`","import React from \"react\";\nimport {Link} from \"gatsby\"\n\nexport default class News extends React.Component {\n  render() {\n    const news = this.props.news\n    console.log('news template')\n    console.log(this.props)\n    const {\n      headline,\n      year,\n      slug,\n      publicationDate,\n      author\n    } = news\n    const formattedDate = new Intl.DateTimeFormat('de', {\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit'\n    }).format(publicationDate)\n    return (\n      <div className={\"box\"}>\n        <dt><Link to={`/news/${year}/${slug}`}><h3 className={\"subtitle\"}>{headline}</h3></Link></dt>\n        <dd>von {author}, {formattedDate}</dd>\n      </div>\n    );\n  }\n}","import React from 'react'\n\nexport default class Division extends React.Component {\n\n  render() {\n    let foo = '';\n    let split = this.props.division.split(';');\n    if (split.includes('mixed') || split.includes('soft mixed')) foo += '⚥'\n    if (split.includes('women')) foo += '♀'\n    if (split.includes('open')) foo += '♂'\n    return (\n      <span>{foo}</span>\n    )\n  }\n}","import React from \"react\";\nimport Division from \"./division\";\n\n\nexport default class ReportTags extends React.Component {\n\n  render() {\n    const date = this.props.date;\n    const location = this.props.location;\n    const fieldType = this.props.fieldType;\n    const division = this.props.division;\n\n    return (\n      <div className=\"field is-grouped is-grouped-multiline\">\n        <div className=\"control\">\n          <div className=\"tags has-addons\">\n            <span className=\"tag is-dark\">Datum</span>\n            <span className=\"tag is-primary\">{date}</span>\n          </div>\n        </div>\n        <div className=\"control\">\n          <div className=\"tags has-addons\">\n            <span className=\"tag is-dark\">Ort</span>\n            <span className=\"tag is-primary\">{location}</span>\n          </div>\n        </div>\n        <div className=\"control\">\n          <div className=\"tags has-addons\">\n            <span className=\"tag is-dark\">Untergrund</span>\n            <span className=\"tag is-primary\">{fieldType}</span>\n          </div>\n        </div>\n        <div className=\"control\">\n          <div className=\"tags has-addons\">\n            <span className=\"tag is-dark\">Division</span>\n            <span className=\"tag is-primary\"><Division division={division}/>&nbsp;{division}</span>\n          </div>\n        </div>\n      </div>);\n  }\n}","import React from \"react\";\nimport ReportTags from \"./reportTags\";\nimport {Link} from \"gatsby\"\n\nexport default class Report extends React.Component {\n  render() {\n    const report = this.props.report\n    const {\n      title,\n      slug,\n      date,\n      year,\n      fieldType,\n      division,\n      location\n    } = report\n    const formattedDate = new Intl.DateTimeFormat('de', {\n      year: 'numeric',\n      month: 'long',\n      day: '2-digit'\n    }).format(date)\n    return (\n      <div className={\"box\"}>\n        <dt><Link to={`/turnierberichte/${year}/${slug}`}><h3 className={\"subtitle\"}>{title}</h3></Link></dt>\n        <dd><ReportTags date={formattedDate} location={location} fieldType={fieldType} division={division}/></dd>\n      </div>\n    );\n\n  }\n}"],"sourceRoot":""}